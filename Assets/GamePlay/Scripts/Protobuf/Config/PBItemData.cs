// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PBItemData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MsgPB {

  /// <summary>Holder for reflection information generated from PBItemData.proto</summary>
  public static partial class PBItemDataReflection {

    #region Descriptor
    /// <summary>File descriptor for PBItemData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PBItemDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBQQkl0ZW1EYXRhLnByb3RvEgVNc2dQQiJ/CghJdGVtRGF0YRIMCgR1dWlk",
            "GAEgASgDEg4KBml0ZW1JZBgCIAEoBRIlCgpwYWNrZXRUeXBlGAMgASgOMhEu",
            "TXNnUEIuUGFja2V0VHlwZRILCgNwb3MYBCABKAUSDQoFY291bnQYBSABKAUS",
            "EgoKb2J0YWluVGltZRgGIAEoAyIvCgtMc3RJdGVtRGF0YRIgCgdsc3REYXRh",
            "GAEgAygLMg8uTXNnUEIuSXRlbURhdGEqKQoTSXRlbUN1cnJlbmN5Mkl0ZW1J",
            "ZBIICgROT05FEAASCAoER0xPRBABKiEKClBhY2tldFR5cGUSBwoDQkFHEAAS",
            "CgoGUExBWUVSEAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::MsgPB.ItemCurrency2ItemId), typeof(global::MsgPB.PacketType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MsgPB.ItemData), global::MsgPB.ItemData.Parser, new[]{ "Uuid", "ItemId", "PacketType", "Pos", "Count", "ObtainTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MsgPB.LstItemData), global::MsgPB.LstItemData.Parser, new[]{ "LstData" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ItemCurrency2ItemId {
    [pbr::OriginalName("NONE")] None = 0,
    [pbr::OriginalName("GLOD")] Glod = 1,
  }

  /// <summary>
  ///背包类型
  /// </summary>
  public enum PacketType {
    [pbr::OriginalName("BAG")] Bag = 0,
    [pbr::OriginalName("PLAYER")] Player = 1,
  }

  #endregion

  #region Messages
  public sealed partial class ItemData : pb::IMessage<ItemData> {
    private static readonly pb::MessageParser<ItemData> _parser = new pb::MessageParser<ItemData>(() => new ItemData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MsgPB.PBItemDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemData(ItemData other) : this() {
      uuid_ = other.uuid_;
      itemId_ = other.itemId_;
      packetType_ = other.packetType_;
      pos_ = other.pos_;
      count_ = other.count_;
      obtainTime_ = other.obtainTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemData Clone() {
      return new ItemData(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private long uuid_;
    /// <summary>
    ///唯一id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    /// <summary>
    ///类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "packetType" field.</summary>
    public const int PacketTypeFieldNumber = 3;
    private global::MsgPB.PacketType packetType_ = 0;
    /// <summary>
    ///背包类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MsgPB.PacketType PacketType {
      get { return packetType_; }
      set {
        packetType_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 4;
    private int pos_;
    /// <summary>
    ///所在位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 5;
    private int count_;
    /// <summary>
    ///数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "obtainTime" field.</summary>
    public const int ObtainTimeFieldNumber = 6;
    private long obtainTime_;
    /// <summary>
    ///获取时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ObtainTime {
      get { return obtainTime_; }
      set {
        obtainTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (ItemId != other.ItemId) return false;
      if (PacketType != other.PacketType) return false;
      if (Pos != other.Pos) return false;
      if (Count != other.Count) return false;
      if (ObtainTime != other.ObtainTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid != 0L) hash ^= Uuid.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (PacketType != 0) hash ^= PacketType.GetHashCode();
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (ObtainTime != 0L) hash ^= ObtainTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uuid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uuid);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (PacketType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) PacketType);
      }
      if (Pos != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Pos);
      }
      if (Count != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Count);
      }
      if (ObtainTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(ObtainTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uuid);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (PacketType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PacketType);
      }
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (ObtainTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ObtainTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemData other) {
      if (other == null) {
        return;
      }
      if (other.Uuid != 0L) {
        Uuid = other.Uuid;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.PacketType != 0) {
        PacketType = other.PacketType;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.ObtainTime != 0L) {
        ObtainTime = other.ObtainTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uuid = input.ReadInt64();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
          case 24: {
            PacketType = (global::MsgPB.PacketType) input.ReadEnum();
            break;
          }
          case 32: {
            Pos = input.ReadInt32();
            break;
          }
          case 40: {
            Count = input.ReadInt32();
            break;
          }
          case 48: {
            ObtainTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LstItemData : pb::IMessage<LstItemData> {
    private static readonly pb::MessageParser<LstItemData> _parser = new pb::MessageParser<LstItemData>(() => new LstItemData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LstItemData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MsgPB.PBItemDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LstItemData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LstItemData(LstItemData other) : this() {
      lstData_ = other.lstData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LstItemData Clone() {
      return new LstItemData(this);
    }

    /// <summary>Field number for the "lstData" field.</summary>
    public const int LstDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::MsgPB.ItemData> _repeated_lstData_codec
        = pb::FieldCodec.ForMessage(10, global::MsgPB.ItemData.Parser);
    private readonly pbc::RepeatedField<global::MsgPB.ItemData> lstData_ = new pbc::RepeatedField<global::MsgPB.ItemData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MsgPB.ItemData> LstData {
      get { return lstData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LstItemData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LstItemData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstData_.Equals(other.lstData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstData_.WriteTo(output, _repeated_lstData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstData_.CalculateSize(_repeated_lstData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LstItemData other) {
      if (other == null) {
        return;
      }
      lstData_.Add(other.lstData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            lstData_.AddEntriesFrom(input, _repeated_lstData_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
