// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PBPetData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MsgPB {

  /// <summary>Holder for reflection information generated from PBPetData.proto</summary>
  public static partial class PBPetDataReflection {

    #region Descriptor
    /// <summary>File descriptor for PBPetData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PBPetDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9QQlBldERhdGEucHJvdG8SBU1zZ1BCIkAKDFBldEhhdGNoRGF0YRILCgNw",
            "b3MYASABKAUSEQoJc3RhcnRUaW1lGAIgASgDEhAKCHBldEVnZ0lkGAMgASgF",
            "IjcKD0xzdFBldEhhdGNoRGF0YRIkCgdsc3REYXRhGAEgAygLMhMuTXNnUEIu",
            "UGV0SGF0Y2hEYXRhIlgKB1BldERhdGESDAoEdXVpZBgBIAEoAxIMCgRuYW1l",
            "GAIgASgJEg0KBXBldElkGAMgASgFEhAKCHN0YXJ0TnVtGAQgASgFEhAKCGJv",
            "cm5UaW1lGAUgASgDIi0KCkxzdFBldERhdGESHwoHbHN0RGF0YRgBIAMoCzIO",
            "Lk1zZ1BCLlBldERhdGEiKQoWTHN0UGV0Rm9sbG93UGxheWVyVXVpZBIPCgds",
            "c3REYXRhGAEgAygDYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MsgPB.PetHatchData), global::MsgPB.PetHatchData.Parser, new[]{ "Pos", "StartTime", "PetEggId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MsgPB.LstPetHatchData), global::MsgPB.LstPetHatchData.Parser, new[]{ "LstData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MsgPB.PetData), global::MsgPB.PetData.Parser, new[]{ "Uuid", "Name", "PetId", "StartNum", "BornTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MsgPB.LstPetData), global::MsgPB.LstPetData.Parser, new[]{ "LstData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MsgPB.LstPetFollowPlayerUuid), global::MsgPB.LstPetFollowPlayerUuid.Parser, new[]{ "LstData" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PetHatchData : pb::IMessage<PetHatchData> {
    private static readonly pb::MessageParser<PetHatchData> _parser = new pb::MessageParser<PetHatchData>(() => new PetHatchData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PetHatchData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MsgPB.PBPetDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PetHatchData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PetHatchData(PetHatchData other) : this() {
      pos_ = other.pos_;
      startTime_ = other.startTime_;
      petEggId_ = other.petEggId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PetHatchData Clone() {
      return new PetHatchData(this);
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 1;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "petEggId" field.</summary>
    public const int PetEggIdFieldNumber = 3;
    private int petEggId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PetEggId {
      get { return petEggId_; }
      set {
        petEggId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PetHatchData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PetHatchData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      if (StartTime != other.StartTime) return false;
      if (PetEggId != other.PetEggId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      if (PetEggId != 0) hash ^= PetEggId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTime);
      }
      if (PetEggId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PetEggId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (PetEggId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PetEggId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PetHatchData other) {
      if (other == null) {
        return;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      if (other.PetEggId != 0) {
        PetEggId = other.PetEggId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
          case 16: {
            StartTime = input.ReadInt64();
            break;
          }
          case 24: {
            PetEggId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LstPetHatchData : pb::IMessage<LstPetHatchData> {
    private static readonly pb::MessageParser<LstPetHatchData> _parser = new pb::MessageParser<LstPetHatchData>(() => new LstPetHatchData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LstPetHatchData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MsgPB.PBPetDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LstPetHatchData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LstPetHatchData(LstPetHatchData other) : this() {
      lstData_ = other.lstData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LstPetHatchData Clone() {
      return new LstPetHatchData(this);
    }

    /// <summary>Field number for the "lstData" field.</summary>
    public const int LstDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::MsgPB.PetHatchData> _repeated_lstData_codec
        = pb::FieldCodec.ForMessage(10, global::MsgPB.PetHatchData.Parser);
    private readonly pbc::RepeatedField<global::MsgPB.PetHatchData> lstData_ = new pbc::RepeatedField<global::MsgPB.PetHatchData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MsgPB.PetHatchData> LstData {
      get { return lstData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LstPetHatchData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LstPetHatchData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstData_.Equals(other.lstData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstData_.WriteTo(output, _repeated_lstData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstData_.CalculateSize(_repeated_lstData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LstPetHatchData other) {
      if (other == null) {
        return;
      }
      lstData_.Add(other.lstData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            lstData_.AddEntriesFrom(input, _repeated_lstData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PetData : pb::IMessage<PetData> {
    private static readonly pb::MessageParser<PetData> _parser = new pb::MessageParser<PetData>(() => new PetData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PetData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MsgPB.PBPetDataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PetData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PetData(PetData other) : this() {
      uuid_ = other.uuid_;
      name_ = other.name_;
      petId_ = other.petId_;
      startNum_ = other.startNum_;
      bornTime_ = other.bornTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PetData Clone() {
      return new PetData(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private long uuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "petId" field.</summary>
    public const int PetIdFieldNumber = 3;
    private int petId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PetId {
      get { return petId_; }
      set {
        petId_ = value;
      }
    }

    /// <summary>Field number for the "startNum" field.</summary>
    public const int StartNumFieldNumber = 4;
    private int startNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartNum {
      get { return startNum_; }
      set {
        startNum_ = value;
      }
    }

    /// <summary>Field number for the "bornTime" field.</summary>
    public const int BornTimeFieldNumber = 5;
    private long bornTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BornTime {
      get { return bornTime_; }
      set {
        bornTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PetData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PetData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (Name != other.Name) return false;
      if (PetId != other.PetId) return false;
      if (StartNum != other.StartNum) return false;
      if (BornTime != other.BornTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid != 0L) hash ^= Uuid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (PetId != 0) hash ^= PetId.GetHashCode();
      if (StartNum != 0) hash ^= StartNum.GetHashCode();
      if (BornTime != 0L) hash ^= BornTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uuid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uuid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (PetId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PetId);
      }
      if (StartNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StartNum);
      }
      if (BornTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(BornTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uuid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (PetId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PetId);
      }
      if (StartNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartNum);
      }
      if (BornTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BornTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PetData other) {
      if (other == null) {
        return;
      }
      if (other.Uuid != 0L) {
        Uuid = other.Uuid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.PetId != 0) {
        PetId = other.PetId;
      }
      if (other.StartNum != 0) {
        StartNum = other.StartNum;
      }
      if (other.BornTime != 0L) {
        BornTime = other.BornTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uuid = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            PetId = input.ReadInt32();
            break;
          }
          case 32: {
            StartNum = input.ReadInt32();
            break;
          }
          case 40: {
            BornTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LstPetData : pb::IMessage<LstPetData> {
    private static readonly pb::MessageParser<LstPetData> _parser = new pb::MessageParser<LstPetData>(() => new LstPetData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LstPetData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MsgPB.PBPetDataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LstPetData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LstPetData(LstPetData other) : this() {
      lstData_ = other.lstData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LstPetData Clone() {
      return new LstPetData(this);
    }

    /// <summary>Field number for the "lstData" field.</summary>
    public const int LstDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::MsgPB.PetData> _repeated_lstData_codec
        = pb::FieldCodec.ForMessage(10, global::MsgPB.PetData.Parser);
    private readonly pbc::RepeatedField<global::MsgPB.PetData> lstData_ = new pbc::RepeatedField<global::MsgPB.PetData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MsgPB.PetData> LstData {
      get { return lstData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LstPetData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LstPetData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstData_.Equals(other.lstData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstData_.WriteTo(output, _repeated_lstData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstData_.CalculateSize(_repeated_lstData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LstPetData other) {
      if (other == null) {
        return;
      }
      lstData_.Add(other.lstData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            lstData_.AddEntriesFrom(input, _repeated_lstData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LstPetFollowPlayerUuid : pb::IMessage<LstPetFollowPlayerUuid> {
    private static readonly pb::MessageParser<LstPetFollowPlayerUuid> _parser = new pb::MessageParser<LstPetFollowPlayerUuid>(() => new LstPetFollowPlayerUuid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LstPetFollowPlayerUuid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MsgPB.PBPetDataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LstPetFollowPlayerUuid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LstPetFollowPlayerUuid(LstPetFollowPlayerUuid other) : this() {
      lstData_ = other.lstData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LstPetFollowPlayerUuid Clone() {
      return new LstPetFollowPlayerUuid(this);
    }

    /// <summary>Field number for the "lstData" field.</summary>
    public const int LstDataFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_lstData_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> lstData_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> LstData {
      get { return lstData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LstPetFollowPlayerUuid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LstPetFollowPlayerUuid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstData_.Equals(other.lstData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstData_.WriteTo(output, _repeated_lstData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstData_.CalculateSize(_repeated_lstData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LstPetFollowPlayerUuid other) {
      if (other == null) {
        return;
      }
      lstData_.Add(other.lstData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            lstData_.AddEntriesFrom(input, _repeated_lstData_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
