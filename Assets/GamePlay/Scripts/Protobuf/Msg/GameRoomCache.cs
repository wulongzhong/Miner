// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GameRoomCache.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MsgPB {

  /// <summary>Holder for reflection information generated from GameRoomCache.proto</summary>
  public static partial class GameRoomCacheReflection {

    #region Descriptor
    /// <summary>File descriptor for GameRoomCache.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameRoomCacheReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNHYW1lUm9vbUNhY2hlLnByb3RvEgVNc2dQQhoNR2FtZURlZi5wcm90bxoU",
            "R2FtZVJvb21QbGF5ZXIucHJvdG8ipwEKFkdhbWVSb29tT25lUGxheWVyQ2Fj",
            "aGUSLwoMbV9wbGF5ZXJJbmZvGAEgASgLMhkuTXNnUEIuR2FtZVJvb21QbGF5",
            "ZXJJbmZvEiEKCW1fbGFzdFBvcxgCIAEoCzIOLk1zZ1BCLlZlY3RvcjISJgoO",
            "bV9sYXN0VmVsb2NpdHkYAyABKAsyDi5Nc2dQQi5WZWN0b3IyEhEKCW1fZGly",
            "TGVmdBgEIAEoCCJeCg1HYW1lUm9vbUNhY2hlEhQKDG1fZnJhbWVJbmRleBgB",
            "IAEoDRI3ChBtX2xzdENhY2hlUGxheWVyGAIgAygLMh0uTXNnUEIuR2FtZVJv",
            "b21PbmVQbGF5ZXJDYWNoZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MsgPB.GameDefReflection.Descriptor, global::MsgPB.GameRoomPlayerReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MsgPB.GameRoomOnePlayerCache), global::MsgPB.GameRoomOnePlayerCache.Parser, new[]{ "MPlayerInfo", "MLastPos", "MLastVelocity", "MDirLeft" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MsgPB.GameRoomCache), global::MsgPB.GameRoomCache.Parser, new[]{ "MFrameIndex", "MLstCachePlayer" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GameRoomOnePlayerCache : pb::IMessage<GameRoomOnePlayerCache> {
    private static readonly pb::MessageParser<GameRoomOnePlayerCache> _parser = new pb::MessageParser<GameRoomOnePlayerCache>(() => new GameRoomOnePlayerCache());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameRoomOnePlayerCache> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MsgPB.GameRoomCacheReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameRoomOnePlayerCache() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameRoomOnePlayerCache(GameRoomOnePlayerCache other) : this() {
      mPlayerInfo_ = other.mPlayerInfo_ != null ? other.mPlayerInfo_.Clone() : null;
      mLastPos_ = other.mLastPos_ != null ? other.mLastPos_.Clone() : null;
      mLastVelocity_ = other.mLastVelocity_ != null ? other.mLastVelocity_.Clone() : null;
      mDirLeft_ = other.mDirLeft_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameRoomOnePlayerCache Clone() {
      return new GameRoomOnePlayerCache(this);
    }

    /// <summary>Field number for the "m_playerInfo" field.</summary>
    public const int MPlayerInfoFieldNumber = 1;
    private global::MsgPB.GameRoomPlayerInfo mPlayerInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MsgPB.GameRoomPlayerInfo MPlayerInfo {
      get { return mPlayerInfo_; }
      set {
        mPlayerInfo_ = value;
      }
    }

    /// <summary>Field number for the "m_lastPos" field.</summary>
    public const int MLastPosFieldNumber = 2;
    private global::MsgPB.Vector2 mLastPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MsgPB.Vector2 MLastPos {
      get { return mLastPos_; }
      set {
        mLastPos_ = value;
      }
    }

    /// <summary>Field number for the "m_lastVelocity" field.</summary>
    public const int MLastVelocityFieldNumber = 3;
    private global::MsgPB.Vector2 mLastVelocity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MsgPB.Vector2 MLastVelocity {
      get { return mLastVelocity_; }
      set {
        mLastVelocity_ = value;
      }
    }

    /// <summary>Field number for the "m_dirLeft" field.</summary>
    public const int MDirLeftFieldNumber = 4;
    private bool mDirLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MDirLeft {
      get { return mDirLeft_; }
      set {
        mDirLeft_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameRoomOnePlayerCache);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameRoomOnePlayerCache other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MPlayerInfo, other.MPlayerInfo)) return false;
      if (!object.Equals(MLastPos, other.MLastPos)) return false;
      if (!object.Equals(MLastVelocity, other.MLastVelocity)) return false;
      if (MDirLeft != other.MDirLeft) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (mPlayerInfo_ != null) hash ^= MPlayerInfo.GetHashCode();
      if (mLastPos_ != null) hash ^= MLastPos.GetHashCode();
      if (mLastVelocity_ != null) hash ^= MLastVelocity.GetHashCode();
      if (MDirLeft != false) hash ^= MDirLeft.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (mPlayerInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MPlayerInfo);
      }
      if (mLastPos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MLastPos);
      }
      if (mLastVelocity_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MLastVelocity);
      }
      if (MDirLeft != false) {
        output.WriteRawTag(32);
        output.WriteBool(MDirLeft);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (mPlayerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MPlayerInfo);
      }
      if (mLastPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MLastPos);
      }
      if (mLastVelocity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MLastVelocity);
      }
      if (MDirLeft != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameRoomOnePlayerCache other) {
      if (other == null) {
        return;
      }
      if (other.mPlayerInfo_ != null) {
        if (mPlayerInfo_ == null) {
          MPlayerInfo = new global::MsgPB.GameRoomPlayerInfo();
        }
        MPlayerInfo.MergeFrom(other.MPlayerInfo);
      }
      if (other.mLastPos_ != null) {
        if (mLastPos_ == null) {
          MLastPos = new global::MsgPB.Vector2();
        }
        MLastPos.MergeFrom(other.MLastPos);
      }
      if (other.mLastVelocity_ != null) {
        if (mLastVelocity_ == null) {
          MLastVelocity = new global::MsgPB.Vector2();
        }
        MLastVelocity.MergeFrom(other.MLastVelocity);
      }
      if (other.MDirLeft != false) {
        MDirLeft = other.MDirLeft;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (mPlayerInfo_ == null) {
              MPlayerInfo = new global::MsgPB.GameRoomPlayerInfo();
            }
            input.ReadMessage(MPlayerInfo);
            break;
          }
          case 18: {
            if (mLastPos_ == null) {
              MLastPos = new global::MsgPB.Vector2();
            }
            input.ReadMessage(MLastPos);
            break;
          }
          case 26: {
            if (mLastVelocity_ == null) {
              MLastVelocity = new global::MsgPB.Vector2();
            }
            input.ReadMessage(MLastVelocity);
            break;
          }
          case 32: {
            MDirLeft = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameRoomCache : pb::IMessage<GameRoomCache> {
    private static readonly pb::MessageParser<GameRoomCache> _parser = new pb::MessageParser<GameRoomCache>(() => new GameRoomCache());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameRoomCache> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MsgPB.GameRoomCacheReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameRoomCache() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameRoomCache(GameRoomCache other) : this() {
      mFrameIndex_ = other.mFrameIndex_;
      mLstCachePlayer_ = other.mLstCachePlayer_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameRoomCache Clone() {
      return new GameRoomCache(this);
    }

    /// <summary>Field number for the "m_frameIndex" field.</summary>
    public const int MFrameIndexFieldNumber = 1;
    private uint mFrameIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MFrameIndex {
      get { return mFrameIndex_; }
      set {
        mFrameIndex_ = value;
      }
    }

    /// <summary>Field number for the "m_lstCachePlayer" field.</summary>
    public const int MLstCachePlayerFieldNumber = 2;
    private static readonly pb::FieldCodec<global::MsgPB.GameRoomOnePlayerCache> _repeated_mLstCachePlayer_codec
        = pb::FieldCodec.ForMessage(18, global::MsgPB.GameRoomOnePlayerCache.Parser);
    private readonly pbc::RepeatedField<global::MsgPB.GameRoomOnePlayerCache> mLstCachePlayer_ = new pbc::RepeatedField<global::MsgPB.GameRoomOnePlayerCache>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MsgPB.GameRoomOnePlayerCache> MLstCachePlayer {
      get { return mLstCachePlayer_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameRoomCache);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameRoomCache other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MFrameIndex != other.MFrameIndex) return false;
      if(!mLstCachePlayer_.Equals(other.mLstCachePlayer_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MFrameIndex != 0) hash ^= MFrameIndex.GetHashCode();
      hash ^= mLstCachePlayer_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MFrameIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MFrameIndex);
      }
      mLstCachePlayer_.WriteTo(output, _repeated_mLstCachePlayer_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MFrameIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MFrameIndex);
      }
      size += mLstCachePlayer_.CalculateSize(_repeated_mLstCachePlayer_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameRoomCache other) {
      if (other == null) {
        return;
      }
      if (other.MFrameIndex != 0) {
        MFrameIndex = other.MFrameIndex;
      }
      mLstCachePlayer_.Add(other.mLstCachePlayer_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MFrameIndex = input.ReadUInt32();
            break;
          }
          case 18: {
            mLstCachePlayer_.AddEntriesFrom(input, _repeated_mLstCachePlayer_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
